---
resource_types:
- name: s3-iam
  type: docker-image
  source:
    repository: governmentpaas/s3-resource
    tag: fda60bf4c5f85e96c16f704e128e5ead9e84d30d

- name: semver-iam
  type: docker-image
  source:
    repository: governmentpaas/semver-resource
    tag: ecbdd201e122b44de99a40ac9f24407c1a43b9a2

resources:
  - name: paas-cf
    type: git
    source:
      uri: https://github.com/alphagov/paas-cf.git
      branch: master
      tag_filter: ((paas_cf_tag_filter))
      commit_verification_keys: ((gpg_public_keys))

  - name: cf-vars-store
    type: s3-iam
    source:
      bucket: ((state_bucket))
      region_name: ((aws_region))
      versioned_file: cf-vars-store.yml
      initial_version: "-"

  - name: cf-manifest
    type: s3-iam
    source:
      bucket: ((state_bucket))
      region_name: ((aws_region))
      versioned_file: cf-manifest.yml

  - name: delete-timer
    type: time
    source:
      start: 20:00 -0000
      stop: 6:00 -0000
      interval: 2h

  - name: bosh-secrets
    type: s3-iam
    source:
      bucket: ((state_bucket))
      region_name: ((aws_region))
      versioned_file: bosh-secrets.yml

  - name: bosh-CA-crt
    type: s3-iam
    source:
      bucket: ((state_bucket))
      region_name: ((aws_region))
      versioned_file: bosh-CA.crt

  - name: deployed-healthcheck
    type: s3-iam
    source:
      bucket: ((state_bucket))
      region_name: ((aws_region))
      versioned_file: healthcheck-deployed

jobs:
  - name: delete
    serial: true
    plan:
      - get: delete-timer
        trigger: true
      - get: bosh-secrets
      - get: paas-cf
      - get: cf-vars-store
      - get: cf-manifest
      - get: bosh-CA-crt

      - task: get-cf-cli-config
        file: paas-cf/concourse/tasks/get-cf-cli-config.yml

      - task: remove-healthcheck-db
        file: paas-cf/concourse/tasks/remove-db.yml
        params:
          ORG: admin
          SPACE: healthchecks
          DB_NAME: healthcheck-db
          BOUND_APPS: healthcheck

      - task: remove-billing-db
        file: paas-cf/concourse/tasks/remove-db.yml
        params:
          ORG: admin
          SPACE: billing
          DB_NAME: billing-db
          BOUND_APPS: paas-billing-api paas-billing-collector

      - task: remove-accounts-db
        file: paas-cf/concourse/tasks/remove-db.yml
        params:
          ORG: admin
          SPACE: billing
          DB_NAME: accounts-db
          BOUND_APPS: paas-accounts

      - task: await-turn
        config:
          platform: linux
          image_resource:
            type: docker-image
            source:
              repository: alpine
              tag: 3.7
          inputs:
            - name: paas-cf
          params:
            DEPLOY_ENV: ((deploy_env))
          run:
            path: ./paas-cf/concourse/scripts/sleep_for_deploy_env.sh

      - task: delete-deployments
        config:
          platform: linux
          inputs:
            - name: delete-timer
            - name: bosh-secrets
            - name: paas-cf
            - name: bosh-CA-crt
          params:
            BOSH_ENVIRONMENT: ((bosh_fqdn))
            BOSH_CA_CERT: bosh-CA-crt/bosh-CA.crt
          outputs:
            - name: deployed-healthcheck
          image_resource:
            type: docker-image
            source:
              repository: governmentpaas/bosh-cli-v2
              tag: 4012d25ceb903b46908a830b8e05773ced1c8f86
          run:
            path: sh
            args:
              - -e
              - -c
              - |
                VAL_FROM_YAML=$(pwd)/paas-cf/concourse/scripts/val_from_yaml.rb
                BOSH_CLIENT=admin
                BOSH_CLIENT_SECRET=$($VAL_FROM_YAML secrets.bosh_admin_password bosh-secrets/bosh-secrets.yml)
                export BOSH_CLIENT
                export BOSH_CLIENT_SECRET

                bosh -n delete-deployment --force --deployment "((deploy_env))"
                bosh -n delete-deployment --force --deployment prometheus

                echo "no" > deployed-healthcheck/healthcheck-deployed
        on_success:
          put: deployed-healthcheck
          params:
            file: deployed-healthcheck/healthcheck-deployed

      - task: shutdown-rds-instances
        config:
          platform: linux
          inputs:
            - name: paas-cf
          params:
            AWS_DEFAULT_REGION: ((aws_region))
            DEPLOY_ENV: ((deploy_env))
          image_resource:
            type: docker-image
            source:
              repository: governmentpaas/awscli
              tag: b2495d6ed07f680125d19aa7d1701da7efabb289
          run:
            path: ./paas-cf/concourse/scripts/rds_instances.sh
            args:
              - stop
