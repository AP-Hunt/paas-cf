resources:
  - name: paas-cf
    type: git
    source:
      uri: https://github.com/alphagov/paas-cf.git
      branch: {{branch_name}}

  - name: vpc-tfstate
    type: s3
    source:
      bucket: {{state_bucket}}
      region_name: {{aws_region}}
      access_key_id: {{aws_access_key_id}}
      secret_access_key: {{aws_secret_access_key}}
      versioned_file: vpc.tfstate

  - name: bosh-tfstate
    type: s3
    source:
      bucket: {{state_bucket}}
      region_name: {{aws_region}}
      access_key_id: {{aws_access_key_id}}
      secret_access_key: {{aws_secret_access_key}}
      versioned_file: bosh.tfstate

  - name: bosh-init-state
    type: s3
    source:
      bucket: {{state_bucket}}
      region_name: {{aws_region}}
      access_key_id: {{aws_access_key_id}}
      secret_access_key: {{aws_secret_access_key}}
      versioned_file: bosh-manifest-state.json

  - name: bosh-manifest
    type: s3
    source:
      bucket: {{state_bucket}}
      region_name: {{aws_region}}
      access_key_id: {{aws_access_key_id}}
      secret_access_key: {{aws_secret_access_key}}
      versioned_file: bosh-manifest.yml

  - name: bosh-secrets
    type: s3
    source:
      bucket: {{state_bucket}}
      region_name: {{aws_region}}
      access_key_id: {{aws_access_key_id}}
      secret_access_key: {{aws_secret_access_key}}
      versioned_file: bosh-secrets.yml

  - name: pipeline-trigger
    type: semver
    source:
      bucket: {{state_bucket}}
      region_name: {{aws_region}}
      access_key_id: {{aws_access_key_id}}
      secret_access_key: {{aws_secret_access_key}}
      key: {{pipeline_trigger_file}}

jobs:
  - name: init
    serial: true
    plan:
    - put: pipeline-trigger
      params: {bump: patch}

  - name: bosh-init-delete
    serial: true
    plan:
    - get: pipeline-trigger
      trigger: true
      passed: [ init ]
    - get: paas-cf
    - get: bosh-tfstate
    - get: bosh-secrets
    - get: bosh-init-state
    - get: bosh-manifest
    - task: bosh-init-microbosh
      config:
        image: docker:///governmentpaas/bosh-init
        run:
          path: sh
          args:
          - -e
          - -c
          - |
            cp bosh-init-state/bosh-manifest-state.json bosh-manifest/bosh-manifest-state.json
            bosh-init delete bosh-manifest/bosh-manifest.yml
            # If the delete is successful, the file will be missing
            [ -f "bosh-manifest/bosh-manifest-state.json" ] || \
                echo "{}" > bosh-manifest/bosh-manifest-state.json
        inputs:
        - name: paas-cf
        - name: bosh-manifest
        - name: bosh-init-state
      ensure:
        put: bosh-init-state
        params:
          from: ./bosh-manifest/bosh-manifest-state.json

  - name: bosh-terraform-destroy
    serial: true
    plan:
    - get: paas-cf
    - get: bosh-init-state
      passed: [ bosh-init-delete ]
    - get: vpc-tfstate
    - task: terraform-variables
      config:
        image: docker:///governmentpaas/bosh-init
        run:
          path: sh
          args:
          - -e
          - -c
          - |
            ruby paas-cf/concourse/scripts/extract_tf_vars_from_terraform_state.rb \
            < vpc-tfstate/vpc.tfstate \
            > terraform-variables/tfvars.sh
        inputs:
        - name: paas-cf
        - name: vpc-tfstate
        outputs:
        - name: terraform-variables
    - task: terraform-destroy
      config:
        image: docker:///governmentpaas/docker-terraform
        params:
          DEPLOY_ENV: {{deploy_env}}
          AWS_DEFAULT_REGION: {{aws_region}}
          AWS_ACCESS_KEY_ID: {{aws_access_key_id}}
          AWS_SECRET_ACCESS_KEY: {{aws_secret_access_key}}
          TF_VAR_AWS_ACCESS_KEY_ID: {{aws_access_key_id}}
          TF_VAR_AWS_SECRET_ACCESS_KEY: {{aws_secret_access_key}}
        run:
          path: sh
          args:
          - -e
          - -c
          - |
            . terraform-variables/tfvars.sh
            cd paas-cf/terraform/bosh
            STATE_BUCKET={{state_bucket}}
            terraform remote config -backend=s3 -backend-config=bucket=${STATE_BUCKET} -backend-config="key=bosh.tfstate"
            terraform destroy -force -var env={{deploy_env}}
        inputs:
        - name: paas-cf
        - name: terraform-variables


