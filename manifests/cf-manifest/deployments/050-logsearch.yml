releases:
- name: logsearch
  url: https://bosh.io/d/github.com/logsearch/logsearch-boshrelease?v=200.0.0
  version: 200.0.0
  sha1: 527c35db31cd66810accf128ceffee4f5fde80c3
- name: logsearch-shipper
  url: https://bosh.io/d/github.com/logsearch/logsearch-shipper-boshrelease?v=4
  version: 4
  sha1: c92ce357c5e1e77a4fb7944d58a1971c7aee06b0

disk_pools:
- name: elasticsearch_master
  disk_size: 102400
  cloud_properties:
    type: gp2

- name: elasticsearch_data
  disk_size: 102400
  cloud_properties:
    type: gp2

- name: queue
  disk_size: 102400
  cloud_properties:
    type: gp2

- name: cluster_monitor
  disk_size: 102400
  cloud_properties:
    type: gp2

jobs:
- name: elasticsearch_master
  release: logsearch
  templates:
  - {name: elasticsearch, release: logsearch}
  resource_pool: medium_z1
  instances: 1
  networks:
  - name: cf1
    static_ips: (( static_ips(0) ))
  persistent_disk_pool: elasticsearch_master
  properties:
    elasticsearch:
      node:
        allow_master: true
        allow_data: false
  update: (( grab properties.update ))

- name: elasticsearch_data
  release: logsearch
  templates:
  - {name: elasticsearch, release: logsearch}
  resource_pool: medium_z1
  instances: 2
  networks:
  - name: cf1
    static_ips: (( static_ips(16, 17) ))
  persistent_disk_pool: elasticsearch_data
  properties:
    elasticsearch:
      node:
        allow_master: false
        allow_data: true
  update: (( grab properties.update ))

- name: queue
  release: logsearch
  templates:
  - {name: queue, release: logsearch}
  resource_pool: small_z1
  instances: 1
  networks:
  - name: cf1
    static_ips: (( static_ips(3) ))
  persistent_disk_pool: queue
  update: (( grab properties.update ))

- name: kibana
  release: logsearch
  templates:
  - {name: kibana, release: logsearch}
  resource_pool: small_z1
  instances: 1
  networks:
  - name: cf1
  update: (( grab properties.update ))

- name: ingestor
  release: logsearch
  templates:
  - {name: ingestor_syslog, release: logsearch}
  - {name: ingestor_relp, release: logsearch}
  resource_pool: small_z1
  instances: 1
  networks:
  - name: cf1
    default: [gateway, dns]
    static_ips: (( static_ips(2) ))
  update: (( grab properties.update ))

- name: parser
  release: logsearch
  templates:
  - {name: parser, release: logsearch}
  resource_pool: medium_z1
  instances: 1
  networks:
  - name: cf1
    static_ips: (( static_ips(4) ))
  update: (( grab properties.update ))

- name: maintenance
  instances: 1
  release: logsearch
  templates:
  - {name: elasticsearch_config, release: logsearch}
  - {name: curator, release: logsearch}
  resource_pool: small_z1
  networks:
  - name: cf1
  update: (( grab properties.update ))

properties:
  curator:
    elasticsearch_host: (( grab jobs.elasticsearch_master.networks.cf1.static_ips.[0] ))
  redis:
    host: (( grab jobs.queue.networks.cf1.static_ips.[0] ))
  elasticsearch:
    master_hosts: (( grab jobs.elasticsearch_master.networks.cf1.static_ips ))
    cluster_name: logsearch
  kibana:
    elasticsearch: (( concat jobs.elasticsearch_master.networks.cf1.static_ips.[0] ":9200" ))
  elasticsearch_config:
    elasticsearch:
      host: (( grab jobs.elasticsearch_master.networks.cf1.static_ips.[0] ))
    templates:
      - index_template: /var/vcap/packages/logsearch-config/default-mappings.json
  syslog_daemon_config:
    address: (( grab jobs.ingestor.networks.cf1.static_ips.[0] ))
    port: 2514
    transport: relp
  logsearch:
    metrics:
      enabled: false
    logs:
      server: (( concat jobs.ingestor.networks.cf1.static_ips.[0] ":5514" ))
  update:
    serial: false
    canaries: 1
    max_in_flight: 1
