---

- type: replace
  path: /releases/-
  value:
    name: logsearch
    url: https://bosh.io/d/github.com/cloudfoundry-community/logsearch-boshrelease?v=205.0.1
    version: 205.0.1
    sha1: 96d0249797be68d47027cf3cda904a4eaee5aa1f

- type: replace
  path: /releases/-
  value:
    name: logsearch-for-cloudfoundry
    version: 0.1.5
    url: https://s3-eu-west-1.amazonaws.com/gds-paas-build-releases/logsearch-for-cloudfoundry-0.1.5.tgz
    sha1: dee838e3a9c317c406ae1bcb84ae42ae862829c2
- type: replace
  path: /instance_groups/-
  value:
    name: queue
    release: logsearch
    azs: [z1, z2]
    jobs:
    - name: queue
      release: logsearch
    - name: datadog-logsearch-queue
      release: datadog-for-cloudfoundry
    vm_type: ((queue_vm_type))
    stemcell: "3468"
    instances: 2
    networks:
    - name: cf
      static_ips: ((queue_static_ips))
    persistent_disk_type: queue

- type: replace
  path: /instance_groups/-
  value:
    name: parser_z1
    release: logsearch
    azs: [z1]
    jobs:
    - name: parser
      release: logsearch
      properties:
        redis:
          host: ((queue_static_ips_first))
        logstash_parser:
          filters:
          - logstash: /var/vcap/packages/logsearch-config-logstash-filters/logstash-filters-default.conf
          - custom-filters: /var/vcap/jobs/parser-config-lfc/config/logstash-filters-custom.conf
          elasticsearch:
            data_hosts:
            - ((terraform_outputs_logsearch_elastic_master_elb_dns_name))
    - name: parser-config-lfc
      release: logsearch-for-cloudfoundry
      properties: &logstash_parser_config_lfc_properties
        logstash_parser:
          custom_filters: |
            if [garden][data][spec] == "" {
              mutate {
                remove_field => [ "[garden][data][spec]" ]
              }
            }
            if [@source][component] == "gorouter" {
              mutate { replace => { "type" => "gorouter" } }
              grok {
                match => {
                  "@message" =>
                    '%{HOSTNAME:[gorouter][host]} - \[%{TIMESTAMP_ISO8601:[gorouter][timestamp]}\] "%{WORD:[gorouter][method]} %{URIPATHPARAM:[gorouter][request]} %{NOTSPACE:[gorouter][httpversion]}" %{BASE10NUM:[gorouter][status]} %{BASE10NUM:[gorouter][bytesreceived]} %{BASE10NUM:[gorouter][bytessent]} %{QUOTEDSTRING:[gorouter][referer]} %{QUOTEDSTRING:[gorouter][useragent]} %{QUOTEDSTRING:[gorouter][clientaddr]} %{QUOTEDSTRING:[gorouter][upstreamaddr]} %{GREEDYDATA:routerkeys}'
                  }
                tag_on_failure => ["fail/cloudfoundry/gorouter/grok"]
                add_tag => ["gorouter"]
              }
              kv {
                source => "router_keys"
                target => "[gorouter][header]"
                value_split => ":"
                remove_field => "router_keys"
              }
            }
            date {
              match => [ "[gorouter][timestamp]", "ISO8601" ]
              target => "@timestamp"
            }
            mutate {
              remove_field => [ "[gorouter][timestamp]" ]
            }
            if [@source][component] == "vcap_nginx_access" {
              grok {
                match => {
                  "@message" =>
                  '%{IPORHOST:[nginx][clientip]} - \[%{HTTPDATE:[nginx][timestamp]}\] "%{WORD:[nginx][verb]} %{URIPATHPARAM:[nginx][request]} HTTP/%{NUMBER:[nginx][httpversion]}" %{NUMBER:[nginx][response]} (?:%{NUMBER:[nginx][bytes]}|-) (?:"(?:%{URI:[nginx][referrer]}|-)"|%{QS:[nginx][referrer]}) %{QS:[nginx][agent]} %{DATA:[nginx][x_forwarded_for]} vcap_request_id:%{UUID:[nginx][vcap_request_id]} response_time:%{NUMBER:[nginx][response_time]}'
                  }
              }
            }
            date {
              match => [ "[nginx][timestamp]", "dd/MMMM/yyyy:HH:mm:ss Z", "dd/MMM/yyyy:HH:mm:ss Z", "ISO8601" ]
              target => "@timestamp"
            }
            mutate {
              remove_field => [ "[nginx][timestamp]" ]
            }

            # Remove unnecessary or empty fields
            mutate {
              remove_field => [
                "syslog5424_ver",
                "syslog_msgid",
                "syslog_procid",
                "syslog_sd_id",
                "syslog_sd_params",
                "[@source][director]"
              ]
            }

    vm_type: parser
    stemcell: "3468"
    instances: 1
    networks:
    - name: cf
      static_ips:
        - 10.0.16.14

- type: replace
  path: /instance_groups/-
  value:
    name: parser_z2
    release: logsearch
    azs: [z2]
    jobs:
    - name: parser
      release: logsearch
      properties:
        redis:
          host: ((queue_static_ips_second))
        logstash_parser:
          filters:
          - logstash: /var/vcap/packages/logsearch-config-logstash-filters/logstash-filters-default.conf
          - custom-filters: /var/vcap/jobs/parser-config-lfc/config/logstash-filters-custom.conf
          elasticsearch:
            data_hosts:
            - ((terraform_outputs_logsearch_elastic_master_elb_dns_name))
    - name: parser-config-lfc
      release: logsearch-for-cloudfoundry
      properties: *logstash_parser_config_lfc_properties
    vm_type: parser
    stemcell: "3468"
    instances: 1
    networks:
    - name: cf
      static_ips:
        - 10.0.17.14

- type: replace
  path: /instance_groups/-
  value:
    name: elasticsearch_master
    release: logsearch
    azs: [z1, z2, z3]
    jobs:
    - name: elasticsearch
      release: logsearch
      properties:
        elasticsearch:
          cluster_name: logsearch
          node:
            allow_master: true
            allow_data: true
          discovery:
            minimum_master_nodes: 2
          master_hosts: ((elasticsearch_master_static_ips))
          health:
            disable_post_start: true
    vm_type: elasticsearch_master
    stemcell: "3468"
    instances: 3
    networks:
    - name: cf
      static_ips: ((elasticsearch_master_static_ips))
    persistent_disk_type: elasticsearch_master
    update:
      canaries: 0
      max_in_flight: 3
      serial: true

- type: replace
  path: /instance_groups/-
  value:
    name: maintenance
    instances: 1
    release: logsearch
    azs: [z1, z2]
    jobs:
    - name: elasticsearch_config
      release: logsearch
      properties:
        elasticsearch_config:
          elasticsearch:
            host: ((terraform_outputs_logsearch_elastic_master_elb_dns_name))
          templates:
            - shards-and-replicas: /var/vcap/jobs/elasticsearch_config/index-templates/shards-and-replicas.json
            - index-settings: /var/vcap/jobs/elasticsearch_config/index-templates/index-settings.json
            - index-mappings-lfc: /var/vcap/jobs/elasticsearch-config-lfc/index-mappings.json
            - index-settings-total-fields: |
                {
                  "template": "logstash-*",
                  "order": 200,
                  "settings": {
                    "index.mapping.total_fields.limit": 2000
                  }
                }
    - name: curator
      release: logsearch
      properties:
        curator:
          elasticsearch:
            host: ((terraform_outputs_logsearch_elastic_master_elb_dns_name))
          purge_logs:
            retention_period: 30
    - name: elasticsearch-config-lfc
      release: logsearch-for-cloudfoundry
    vm_type: small
    stemcell: "3468"
    networks:
    - name: cf

- type: replace
  path: /instance_groups/-
  value:
    name: kibana
    release: logsearch
    azs: [z1, z2]
    jobs:
    - name: kibana
      release: logsearch
      properties:
        kibana:
          elasticsearch:
            host: ((terraform_outputs_logsearch_elastic_master_elb_dns_name))
            port: 9200
          request_timeout: 300000
          shard_timeout: 30000
    - name: haproxy
      release: logsearch
      properties:
        haproxy:
          kibana:
            auth:
              username: admin
              password: ((secrets_kibana_admin_password))
            backend_servers: ["localhost"]
            backend_port: 5601
            inbound_port: 5602
    vm_type: kibana
    stemcell: "3468"
    instances: 1
    networks:
    - name: cf

- type: replace
  path: /instance_groups/-
  value:
    name: ingestor_z1
    release: logsearch
    azs: [z1]
    jobs:
    - name: ingestor_syslog
      release: logsearch
      properties:
        redis:
          host: ((queue_static_ips_first))
    vm_type: ingestor
    stemcell: "3468"
    instances: 1
    networks:
    - name: cf
      default: [gateway, dns]
      static_ips:
        - 10.0.16.12
    update:
      serial: true

- type: replace
  path: /instance_groups/-
  value:
    name: ingestor_z2
    release: logsearch
    azs: [z2]
    jobs:
    - name: ingestor_syslog
      release: logsearch
      properties:
        redis:
          host: ((queue_static_ips_second))
    vm_type: ingestor
    stemcell: "3468"
    instances: 1
    networks:
    - name: cf
      default: [gateway, dns]
      static_ips:
        - 10.0.17.12
    update:
      serial: true
