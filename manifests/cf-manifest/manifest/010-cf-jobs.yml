instance_groups:
  - name: consul
    azs: [z1, z2, z3]
    jobs:
      - name: consul_agent
        release: consul
        consumes: {consul_client: nil, consul_server: nil, consul_common: nil}
      - name: datadog-consul-agent-server
        release: datadog-for-cloudfoundry
      - name: datadog-consul-agent-client
        release: datadog-for-cloudfoundry
      - name: metron_agent
        release: loggregator
    instances: 3
    persistent_disk_type: consul
    vm_type: small
    stemcell: default
    networks:
      - name: cf
        static_ips: ((consul_static_ips))
    update:
      serial: true
    properties:
      consul:
        agent:
          mode: server

  - name: adapter
    azs: [z1, z2, z3]
    instances: 3
    vm_type: small
    stemcell: default
    networks:
      - name: cf
    jobs:
      - name: consul_agent
        release: consul
        consumes: {consul: nil, consul_common: nil, consul_server: nil, consul_client: nil}
      - name: metron_agent
        release: loggregator
      - name: adapter
        release: cf-syslog-drain
    properties:
      scalablesyslog:
        adapter:
          tls:
            ca: ((certs_bosh_ca_cert))
            cert: ((certs_scalablesyslog_adapter_cert))
            key: ((certs_scalablesyslog_adapter_key))
            cn: scalablesyslog_adapter
          logs:
            addr: reverse-log-proxy.service.cf.internal:8082
        adapter_rlp:
          tls:
            ca: ((certs_bosh_ca_cert))
            cert: ((certs_reverse_log_proxy_cert))
            key: ((certs_reverse_log_proxy_key))
            cn: reverse_log_proxy
    update:
      serial: true
      max_in_flight: 1

  - name: scheduler
    migrated_from:
    - name: brain
    azs: [z1, z2, z3]
    instances: 3
    vm_type: small
    stemcell: default
    networks:
      - name: cf
    jobs:
      - name: consul_agent
        release: consul
        consumes: {consul: nil, consul_common: nil, consul_server: nil, consul_client: nil}
      - name: metron_agent
        release: loggregator
      - name: cfdot
        release: diego
      - name: auctioneer
        release: diego
      - name: cloud_controller_clock
        release: capi
      - name: statsd_injector
        release: statsd-injector
      - name: tps
        release: capi
      - name: ssh_proxy
        release: diego
      - name: scheduler
        release: cf-syslog-drain
    vm_extensions:
      - ssh_proxy_elb
    properties:
      scalablesyslog:
        scheduler:
          api:
            url: https://cloud-controller-ng.service.cf.internal:9023
          tls:
            client:
              ca: ((certs_bosh_ca_cert))
              cert: ((certs_scalablesyslog_adapter_scheduler_client_cert))
              key: ((certs_scalablesyslog_adapter_scheduler_client_key))
              adapter_cn: "scalablesyslog_adapter"
            api:
              ca: ((certs_bosh_ca_cert))
              cert: ((certs_scalablesyslog_adapter_scheduler_api_cert))
              key: ((certs_scalablesyslog_adapter_scheduler_api_key))
              cn: "cloud-controller-ng.service.cf.internal"
    update:
      serial: true
      max_in_flight: 1

  - name: nats
    azs: [z1, z2]
    jobs:
      - name: consul_agent
        release: consul
        consumes: {consul_client: nil, consul_server: nil, consul_common: nil}
      - name: datadog-consul-agent-client
        release: datadog-for-cloudfoundry
      - name: nats
        consumes: {nats: nil}
        release: nats
      - name: datadog-nats
        release: datadog-for-cloudfoundry
      - name: metron_agent
        release: loggregator
    instances: 2
    vm_type: medium
    stemcell: default
    networks:
      - name: cf
        static_ips: ((nats_static_ips))

  - name: diego-api
    migrated_from:
    - name: database
    azs: [z1, z2]
    jobs:
      - name: consul_agent
        release: consul
        consumes: {consul_client: nil, consul_server: nil, consul_common: nil}
      - name: datadog-consul-agent-client
        release: datadog-for-cloudfoundry
      - name: datadog-bbs
        release: datadog-for-cloudfoundry
        properties:
          bbs:
            url: "https://bbs.service.cf.internal:8889/v1/actual_lrp_groups/list"
            client_cert: "/var/vcap/jobs/cfdot/config/certs/cfdot/client.crt"
            client_key: "/var/vcap/jobs/cfdot/config/certs/cfdot/client.key"
            ca_cert: "/var/vcap/jobs/cfdot/config/certs/cfdot/ca.crt"
      - name: cfdot
        release: diego
      - name: bbs
        release: diego
      - name: metron_agent
        release: loggregator
    instances: 2
    vm_type: medium
    vm_extensions:
      - cf_rds_client_sg
    stemcell: default
    networks:
      - name: cf
    update:
      serial: true

  - name: uaa
    azs: [z1, z2]
    jobs:
      - name: consul_agent
        release: consul
        consumes: {consul_client: nil, consul_server: nil, consul_common: nil}
      - name: datadog-consul-agent-client
        release: datadog-for-cloudfoundry
      - name: uaa
        release: uaa
      - name: metron_agent
        release: loggregator
      - name: statsd_injector
        release: statsd-injector
      - name: route_registrar
        release: routing
    instances: 2
    vm_type: medium
    vm_extensions:
      - cf_rds_client_sg
    stemcell: default
    networks:
      - name: cf
    properties:
      ssl_key: ((certs_uaa_internal_key))
      ssl_chained_cert: ((certs_uaa_internal_cert))
      consul:
        agent:
          services:
            uaa: {}
      route_registrar:
        routes:
          - name: uaa
            registration_interval: 10s
            health_check:
              name: cf_uaa_health_check
              script_path: /var/vcap/jobs/uaa/bin/health_check
              timeout: "5s"
            port: 8081
            tls_port: 8443
            server_cert_domain_san: "uaa.service.cf.internal"
            tags:
              component: uaa
            uris:
              - "uaa.((system_domain))"
              - "login.((system_domain))"

  - name: api
    azs: [z1, z2]
    jobs:
      - name: consul_agent
        release: consul
        consumes: {consul_client: nil, consul_server: nil, consul_common: nil}
      - name: cloud_controller_ng
        release: capi
        consumes: {nats: nil}
      - name: cloud_controller_clock
        release: capi
        consumes: {nats: nil}
      - name: metron_agent
        release: loggregator
      - name: statsd_injector
        release: statsd-injector
      - name: file_server
        release: diego
      - name: cc_uploader
        release: capi
      - name: java-buildpack
        release: java-buildpack
      - name: go-buildpack
        release: go-buildpack
      - name: binary-buildpack
        release: binary-buildpack
      - name: nodejs-buildpack
        release: nodejs-buildpack
      - name: ruby-buildpack
        release: ruby-buildpack
      - name: php-buildpack
        release: php-buildpack
      - name: python-buildpack
        release: python-buildpack
      - name: staticfile-buildpack
        release: staticfile-buildpack
      - name: datadog-consul-agent-client
        release: datadog-for-cloudfoundry
      - name: datadog-cc
        release: datadog-for-cloudfoundry
    instances: 2
    vm_type: large
    vm_extensions:
      - 64g_ephemeral_disk
      - cf_cc_instance_profile
      - cf_cc_security_groups
      - cf_cc_elb
    stemcell: default
    networks:
      - name: cf
    properties:
      max_in_flight: 1
      consul:
        agent:
          services:
            cloud_controller_ng: {}

  - name: cc-worker
    migrated_from:
    - name: api_worker
    azs: [z1, z2]
    jobs:
      - name: consul_agent
        release: consul
        consumes: {consul_client: nil, consul_server: nil, consul_common: nil}
      - name: cloud_controller_worker
        release: capi
        consumes: {nats: nil}
      - name: metron_agent
        release: loggregator
      - name: datadog-consul-agent-client
        release: datadog-for-cloudfoundry
      - name: datadog-cc-worker
        release: datadog-for-cloudfoundry
    instances: 2
    vm_type: medium
    vm_extensions:
      - 64g_ephemeral_disk
      - cf_cc_instance_profile
      - cf_cc_security_groups
    stemcell: default
    networks:
      - name: cf
    properties:
      max_in_flight: 1

  - name: log-api
    migrated_from:
    - name: loggregator_trafficcontroller
    azs: [z1, z2]
    jobs:
      - name: consul_agent
        release: consul
        consumes: {consul_client: nil, consul_server: nil, consul_common: nil}
      - name: datadog-consul-agent-client
        release: datadog-for-cloudfoundry
      - name: loggregator_trafficcontroller
        release: loggregator
        consumes: {doppler: {from: doppler}}
      - name: metron_agent
        release: loggregator
      - name: reverse_log_proxy
        release: loggregator
    provides:
      reverse_log_proxy: {as: reverse_log_proxy, shared: true}
    instances: 2
    vm_type: medium
    vm_extensions:
      - cf_doppler_elbs
    stemcell: default
    networks:
      - name: cf
    properties:
      loggregator:
        uaa:
          client_secret: ((secrets_uaa_clients_doppler_secret))
        reverse_log_proxy:
          egress:
            port: 8082
      consul:
        agent:
          services:
            loggregator_trafficcontroller: {}
            reverse_log_proxy: {}

  - name: router
    azs: [z1, z2]
    jobs:
      - name: consul_agent
        release: consul
        consumes: {consul_client: nil, consul_server: nil, consul_common: nil}
      - name: datadog-consul-agent-client
        release: datadog-for-cloudfoundry
      - name: gorouter
        release: routing
        consumes: {nats: nil}
      - name: metron_agent
        release: loggregator
      - name: haproxy
        release: paas-haproxy
      - name: datadog-router
        release: datadog-for-cloudfoundry
      - name: racoon
        release: ipsec
      - name: datadog-ipsec
        release: datadog-for-cloudfoundry
    instances: 2
    vm_type: router
    stemcell: default
    networks:
      - name: router
    properties:
      consul:
        agent:
          services:
            gorouter: {}
      racoon:
        ports:
        - name: router
          targets: ((terraform_outputs_cell_subnet_cidr_blocks))

  - name: diego-cell
    migrated_from:
    - name: cell
    azs: [z1, z2, z3]
    jobs:
      - name: consul_agent
        release: consul
        consumes: {consul_client: nil, consul_server: nil, consul_common: nil}
      - name: datadog-consul-agent-client
        release: datadog-for-cloudfoundry
      - name: rep
        release: diego
      - name: garden
        release: garden-runc
      - name: cflinuxfs2-rootfs-setup
        release: cflinuxfs2
      - name: cfdot
        release: diego
      - name: metron_agent
        release: loggregator
      - name: route_emitter
        release: diego
      - name: datadog-route-emitter
        release: datadog-for-cloudfoundry
      - name: datadog-rep
        release: datadog-for-cloudfoundry
      - name: datadog-garden
        release: datadog-for-cloudfoundry
      - name: racoon
        release: ipsec
      - name: datadog-ipsec
        release: datadog-for-cloudfoundry
    instances: ((cell_instances))
    vm_type: cell
    stemcell: default
    networks:
      - name: cell
    properties:
      racoon:
        ports:
        - name: cell
          targets: ((terraform_outputs_router_subnet_cidr_blocks))
      tls:
        ca_cert: ((certs_bosh_ca_cert))
        cert: ((certs_cc_client_cert))
        key: ((certs_cc_client_key))

  - name: doppler
    azs: [z1, z2, z3]
    jobs:
      - name: consul_agent
        release: consul
        consumes: {consul_client: nil, consul_server: nil, consul_common: nil}
      - name: datadog-consul-agent-client
        release: datadog-for-cloudfoundry
      - name: doppler
        release: loggregator
        provides: {doppler: {as: doppler}}
      - name: metron_agent
        release: loggregator
    instances: 3
    vm_type: medium
    stemcell: default
    networks:
      - name: cf
    properties:
      consul:
        agent:
          services:
            doppler: {}
