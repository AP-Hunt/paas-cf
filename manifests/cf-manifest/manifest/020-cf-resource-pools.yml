---
meta:
  default_env:
    bosh:
      password: (( grab secrets.vcap_password ))
  stemcell:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent
    version: 3232.4
    url: https://bosh.io/d/stemcells/bosh-aws-xen-hvm-ubuntu-trusty-go_agent?v=3232.4
    sha1: ac920cae17c7159dee3bf1ebac727ce2d01564e9
  zones:
    z1: (( grab terraform_outputs.zone0 ))
    z2: (( grab terraform_outputs.zone1 ))
    z3: (( grab terraform_outputs.zone2 ))


resource_pools:
  - name: small_z1
    network: cf1
    stemcell: (( grab meta.stemcell ))
    env: (( grab meta.default_env ))
    cloud_properties:
      instance_type: m3.medium
      ephemeral_disk:
        size: 10240
        type: gp2
      availability_zone: (( grab meta.zones.z1 ))

  - name: small_z2
    network: cf2
    stemcell: (( grab meta.stemcell ))
    env: (( grab meta.default_env ))
    cloud_properties:
      instance_type: m3.medium
      ephemeral_disk:
        size: 10240
        type: gp2
      availability_zone: (( grab meta.zones.z2 ))

  - name: small_z3
    network: cf3
    stemcell: (( grab meta.stemcell ))
    env: (( grab meta.default_env ))
    cloud_properties:
      instance_type: m3.medium
      ephemeral_disk:
        size: 10240
        type: gp2
      availability_zone: (( grab meta.zones.z3 ))

  - name: medium_z1
    network: cf1
    stemcell: (( grab meta.stemcell ))
    env: (( grab meta.default_env ))
    cloud_properties:
      instance_type: m3.medium
      ephemeral_disk:
        size: 10240
        type: gp2
      availability_zone: (( grab meta.zones.z1 ))

  - name: medium_z2
    network: cf2
    stemcell: (( grab meta.stemcell ))
    env: (( grab meta.default_env ))
    cloud_properties:
      instance_type: m3.medium
      ephemeral_disk:
        size: 10240
        type: gp2
      availability_zone: (( grab meta.zones.z2 ))

  - name: medium_z3
    network: cf3
    stemcell: (( grab meta.stemcell ))
    env: (( grab meta.default_env ))
    cloud_properties:
      instance_type: m3.medium
      ephemeral_disk:
        size: 10240
        type: gp2
      availability_zone: (( grab meta.zones.z3 ))

  - name: api_z1
    network: cf1
    stemcell: (( grab meta.stemcell ))
    env: (( grab meta.default_env ))
    cloud_properties:
      instance_type: m3.medium
      iam_instance_profile: cf-cloudcontroller
      ephemeral_disk:
        size: 65536
        type: gp2
      availability_zone: (( grab meta.zones.z1 ))
      elbs:
        - (( grab terraform_outputs.cf_cc_elb_name ))
      security_groups:
        - (( grab terraform_outputs.default_security_group ))
        - (( grab terraform_outputs.cf_rds_client_security_group ))

  - name: api_z2
    network: cf2
    stemcell: (( grab meta.stemcell ))
    env: (( grab meta.default_env ))
    cloud_properties:
      instance_type: m3.medium
      iam_instance_profile: cf-cloudcontroller
      ephemeral_disk:
        size: 65536
        type: gp2
      availability_zone: (( grab meta.zones.z2 ))
      elbs:
        - (( grab terraform_outputs.cf_cc_elb_name ))
      security_groups:
        - (( grab terraform_outputs.default_security_group ))
        - (( grab terraform_outputs.cf_rds_client_security_group ))

  - name: clock_global
    network: cf1
    stemcell: (( grab meta.stemcell ))
    env: (( grab meta.default_env ))
    cloud_properties:
      instance_type: m3.medium
      ephemeral_disk:
        size: 10240
        type: gp2
      availability_zone: (( grab meta.zones.z1 ))
      security_groups:
        - (( grab terraform_outputs.default_security_group ))
        - (( grab terraform_outputs.cf_rds_client_security_group ))

  - name: api_worker_z1
    network: cf1
    stemcell: (( grab meta.stemcell ))
    env: (( grab meta.default_env ))
    cloud_properties:
      instance_type: m3.medium
      iam_instance_profile: cf-cloudcontroller
      ephemeral_disk:
        size: 65536
        type: gp2
      availability_zone: (( grab meta.zones.z1 ))
      security_groups:
        - (( grab terraform_outputs.default_security_group ))
        - (( grab terraform_outputs.cf_rds_client_security_group ))

  - name: api_worker_z2
    network: cf2
    stemcell: (( grab meta.stemcell ))
    env: (( grab meta.default_env ))
    cloud_properties:
      instance_type: m3.medium
      iam_instance_profile: cf-cloudcontroller
      ephemeral_disk:
        size: 65536
        type: gp2
      availability_zone: (( grab meta.zones.z2 ))
      security_groups:
        - (( grab terraform_outputs.default_security_group ))
        - (( grab terraform_outputs.cf_rds_client_security_group ))

  - name: uaa_z1
    network: cf1
    stemcell: (( grab meta.stemcell ))
    env: (( grab meta.default_env ))
    cloud_properties:
      instance_type: m3.medium
      ephemeral_disk:
        size: 10240
        type: gp2
      availability_zone: (( grab meta.zones.z1 ))
      elbs:
        - (( grab terraform_outputs.cf_uaa_elb_name ))
      security_groups:
        - (( grab terraform_outputs.default_security_group ))
        - (( grab terraform_outputs.cf_rds_client_security_group ))

  - name: uaa_z2
    network: cf2
    stemcell: (( grab meta.stemcell ))
    env: (( grab meta.default_env ))
    cloud_properties:
      instance_type: m3.medium
      ephemeral_disk:
        size: 10240
        type: gp2
      availability_zone: (( grab meta.zones.z2 ))
      elbs:
        - (( grab terraform_outputs.cf_uaa_elb_name ))
      security_groups:
        - (( grab terraform_outputs.default_security_group ))
        - (( grab terraform_outputs.cf_rds_client_security_group ))

  - name: loggregator_trafficcontroller_z1
    network: cf1
    stemcell: (( grab meta.stemcell ))
    env: (( grab meta.default_env ))
    cloud_properties:
      instance_type: m3.medium
      ephemeral_disk:
        size: 10240
        type: gp2
      availability_zone: (( grab meta.zones.z1 ))
      elbs:
        - (( grab terraform_outputs.cf_doppler_elb_name ))
        - (( grab terraform_outputs.cf_loggregator_elb_name ))

  - name: loggregator_trafficcontroller_z2
    network: cf2
    stemcell: (( grab meta.stemcell ))
    env: (( grab meta.default_env ))
    cloud_properties:
      instance_type: m3.medium
      ephemeral_disk:
        size: 10240
        type: gp2
      availability_zone: (( grab meta.zones.z2 ))
      elbs:
        - (( grab terraform_outputs.cf_doppler_elb_name ))
        - (( grab terraform_outputs.cf_loggregator_elb_name ))

  - name: router_z1
    network: "router1"
    stemcell: (( grab meta.stemcell ))
    env: (( grab meta.default_env ))
    cloud_properties:
      instance_type: c3.large
      ephemeral_disk:
        size: 10240
        type: gp2
      availability_zone: (( grab meta.zones.z1 ))
      elbs:
        - (( grab terraform_outputs.cf_router_elb_name ))

  - name: router_z2
    network: "router2"
    stemcell: (( grab meta.stemcell ))
    env: (( grab meta.default_env ))
    cloud_properties:
      instance_type: c3.large
      ephemeral_disk:
        size: 10240
        type: gp2
      availability_zone: (( grab meta.zones.z2 ))
      elbs:
        - (( grab terraform_outputs.cf_router_elb_name ))

# Diego below
  - name: access_z1
    network: cf1
    stemcell: (( grab meta.stemcell ))
    env: (( grab meta.default_env ))
    cloud_properties:
      instance_type: m3.medium
      availability_zone: (( grab meta.zones.z1 ))
      elbs:
        - (( grab terraform_outputs.cf_ssh_proxy_elb_name ))

  - name: access_z2
    network: cf2
    stemcell: (( grab meta.stemcell ))
    env: (( grab meta.default_env ))
    cloud_properties:
      instance_type: m3.medium
      availability_zone: (( grab meta.zones.z2 ))
      elbs:
        - (( grab terraform_outputs.cf_ssh_proxy_elb_name ))

  - name: cell_z1
    network: cell1
    stemcell: (( grab meta.stemcell ))
    env: (( grab meta.default_env ))
    cloud_properties:
      instance_type: r3.xlarge
      availability_zone: (( grab meta.zones.z1 ))
      security_groups:
        - (( grab terraform_outputs.rds_broker_db_clients_security_group ))
        - (( grab terraform_outputs.default_security_group ))

  - name: cell_z2
    network: cell2
    stemcell: (( grab meta.stemcell ))
    env: (( grab meta.default_env ))
    cloud_properties:
      instance_type: r3.xlarge
      availability_zone: (( grab meta.zones.z2 ))
      security_groups:
        - (( grab terraform_outputs.rds_broker_db_clients_security_group ))
        - (( grab terraform_outputs.default_security_group ))

  - name: database_z1
    network: cf1
    stemcell: (( grab meta.stemcell ))
    env: (( grab meta.default_env ))
    cloud_properties:
      instance_type: m3.large
      availability_zone: (( grab meta.zones.z1 ))

  - name: database_z2
    network: cf2
    stemcell: (( grab meta.stemcell ))
    env: (( grab meta.default_env ))
    cloud_properties:
      instance_type: m3.large
      availability_zone: (( grab meta.zones.z2 ))

